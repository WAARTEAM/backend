{"version":3,"sources":["$_lazy_route_resource lazy namespace object","src/app/app.component.html","src/app/components/chatpage/chatpage.component.html","src/app/components/landing/landing.component.html","src/app/components/login/login.component.html","src/app/components/navbar/navbar.component.html","src/app/components/profile/profile.component.html","src/app/components/search-area/search-area.component.html","src/app/components/settings/settings.component.html","src/app/signup/signup.component.html","node_modules/tslib/tslib.es6.js","src/app/app-routing.module.ts","src/app/app.component.scss","src/app/app.component.ts","src/app/app.module.ts","src/app/components/chatpage/chatpage.component.scss","src/app/components/chatpage/chatpage.component.ts","src/app/components/landing/landing.component.scss","src/app/components/landing/landing.component.ts","src/app/components/login/login.component.scss","src/app/components/login/login.component.ts","src/app/components/navbar/navbar.component.scss","src/app/components/navbar/navbar.component.ts","src/app/components/profile/profile.component.scss","src/app/components/profile/profile.component.ts","src/app/components/search-area/search-area.component.scss","src/app/components/search-area/search-area.component.ts","src/app/components/settings/settings.component.scss","src/app/components/settings/settings.component.ts","src/app/guards/auth.guard.ts","src/app/guards/notauth.guard.ts","src/app/services/auth.service.ts","src/app/services/data/data.service.ts","src/app/services/http/http.service.ts","src/app/services/validate.service.ts","src/app/signup/signup.component.scss","src/app/signup/signup.component.ts","src/environments/environment.ts","src/main.ts","ws (ignored)"],"names":[],"mappings":"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","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<app-navbar> </app-navbar>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n  <flash-messages></flash-messages>\\r\\n  <router-outlet> </router-outlet>\\r\\n</div>\\r\\n\"","export default \"<div *ngIf=\\\"latest\\\" class=\\\" card blue-gradient lighten-3 chat-room mt-3\\\">\\r\\n\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <!-- Grid row -->\\r\\n        <div class=\\\"row px-lg-2 px-2\\\">\\r\\n            <!-- Grid column -->\\r\\n            <div *ngIf=\\\"innerWidth > 1270 || page == 'headers'\\\" class=\\\"col-md- col-xl-4 px-0\\\">\\r\\n                <span style=\\\"text-align: center;\\\">\\r\\n          <button\\r\\n            (click)=\\\"getMessages()\\\"\\r\\n            type=\\\"button\\\"\\r\\n            outline=\\\"true\\\"\\r\\n            rounded=\\\"true\\\"\\r\\n            style=\\\"border-radius: 20px;margin-top: -20px; \\\"\\r\\n            class=\\\"btn btn-info btn-rounded btn-sm  waves-effect waves-light\\\"\\r\\n          >\\r\\n            Friends\\r\\n          </button>\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            outline=\\\"true\\\"\\r\\n            rounded=\\\"true\\\"\\r\\n            style=\\\"border-radius: 20px;margin-top: -20px; \\\"\\r\\n            class=\\\"btn btn-info btn-rounded btn-sm waves-effect waves-light \\\"\\r\\n            (click)=\\\"getChatrooms()\\\"\\r\\n          >\\r\\n            Chatrooms\\r\\n          </button>\\r\\n        </span>\\r\\n\\r\\n                <div class=\\\"white z-depth-1 px-3 pt-3 p-2\\\">\\r\\n                    <!-- :========================================= Friends list ==============================================-->\\r\\n\\r\\n                    <ul *ngIf=\\\"render === 'friends'\\\" style=\\\"height: 70vh; overflow-y: scroll; \\\" class=\\\"list-unstyled friend-list \\\">\\r\\n                        <li *ngIf=\\\"!latest.length\\\" class=\\\"lighten-3 p-2 text-muted text-center\\\">You have no messages yet </li>\\r\\n                        <li style=\\\"height: 5em;\\\" (click)=\\\"changeCurrent(message);page = 'chat'\\\" *ngFor=\\\"let message of latest\\\" class=\\\"lighten-3 p-2\\\" [ngClass]=\\\"{\\r\\n                'active grey': receiverId(message) === currentReceiver\\r\\n              }\\\">\\r\\n                            <a class=\\\"d-flex justify-content-between\\\">\\r\\n                                <img [src]=\\\"http.initialsGenerator(\\r\\n                  message.sender.username === currentUserUsername?\\r\\n                  message.receiver.firstname + ' ' + message.receiver.lastname : \\r\\n                  message.sender.firstname + ' ' + message.sender.lastname )\\\" alt=\\\"avatar\\\" class=\\\"avatar rounded-circle d-flex align-self-center mr-2 z-depth-1\\\" />\\r\\n                                <div class=\\\"text-small\\\">\\r\\n                                    <strong style=\\\"float: left;\\\">\\r\\n                    {{\\r\\n                      message.sender.username === currentUserUsername\\r\\n                        ? message.receiver.firstname +\\r\\n                          \\\" \\\" +\\r\\n                          message.receiver.lastname\\r\\n                        : message.sender.firstname +\\r\\n                          \\\" \\\" +\\r\\n                          message.sender.lastname\\r\\n                    }}\\r\\n                  </strong>\\r\\n                                    <br />\\r\\n                                    <p style=\\\"text-overflow: ellipsis; max-height: 1.5em; max-width: 120px; overflow: hidden;\\\" class=\\\"last-message text-muted\\\">{{ message.content }}</p>\\r\\n                                </div>\\r\\n                                <div class=\\\"chat-footer\\\">\\r\\n                                    <p class=\\\"text-smaller text-muted mb-0\\\">{{getTime(message._id)}}</p>\\r\\n                                    <!-- <span class=\\\"badge badge-danger float-right\\\">1</span> -->\\r\\n                                </div>\\r\\n                            </a>\\r\\n                        </li>\\r\\n\\r\\n\\r\\n                    </ul>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                    <!-- :========================================= Chats list ==============================================-->\\r\\n\\r\\n                    <ul *ngIf=\\\"render === 'chatrooms'\\\" style=\\\"height: 65vh; overflow-y: scroll; \\\" class=\\\"list-unstyled friend-list \\\">\\r\\n                        <li *ngIf=\\\"!latestChatrooms.length\\\" class=\\\"lighten-3 p-2 text-muted text-center\\\">You are not in any chatroom yet </li>\\r\\n\\r\\n                        <li (click)=\\\"currentChatroom(chatroom);page = 'chat'\\\" *ngFor=\\\"let chatroom of latestChatrooms\\\" class=\\\"lighten-3 p-2\\\" [ngClass]=\\\"{\\r\\n                          'active grey': chatroom._id === currentRoom._id\\r\\n                        }\\\">\\r\\n                            <a class=\\\"d-flex justify-content-between\\\">\\r\\n                                <img [src]=\\\"http.initialsGenerator(chatroom.name, 90)\\\" alt=\\\"avatar\\\" class=\\\"avatar rounded-circle d-flex align-self-center mr-2 z-depth-1\\\" />\\r\\n                                <div class=\\\"text-small\\\">\\r\\n                                    <strong>\\r\\n                    {{ chatroom.name }}\\r\\n                  </strong>\\r\\n                                    <br />\\r\\n                                    <p class=\\\"last-message text-muted\\\"></p>\\r\\n                                </div>\\r\\n                                <div class=\\\"chat-footer\\\">\\r\\n\\r\\n                                </div>\\r\\n                            </a>\\r\\n                        </li>\\r\\n                    </ul>\\r\\n\\r\\n                    <button data-toggle=\\\"modal\\\" data-target=\\\"#centralModalSm\\\" *ngIf=\\\"render === 'chatrooms'\\\" type=\\\"button\\\" outline=\\\"true\\\" rounded=\\\"true\\\" style=\\\"border-radius: 20px;margin-top: -5px; \\\" class=\\\"btn btn-info btn-rounded btn-sm waves-effect waves-light \\\" (click)=\\\"getChatrooms()\\\">\\r\\n            +\\r\\n          </button>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <!-- Grid column -->\\r\\n            <!-- Central Modal Small -->\\r\\n            <div class=\\\"modal fade\\\" id=\\\"centralModalSm\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n                <!-- Change class .modal-sm to change the size of the modal -->\\r\\n\\r\\n                <div class=\\\"modal-dialog modal-sm\\\" role=\\\"document\\\">\\r\\n                    <div class=\\\"modal-content\\\">\\r\\n                        <div class=\\\"modal-header\\\">\\r\\n                            <h4 class=\\\"modal-title w-100 text-muted align-self-center\\\" style=\\\"font-family:sans-serif;\\\" id=\\\"myModalLabel\\\">\\r\\n                                make chatroom\\r\\n                            </h4>\\r\\n                            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n              </button>\\r\\n                        </div>\\r\\n                        <div class=\\\"modal-body text-muted\\\">\\r\\n                            <input type=\\\"text\\\" placeholder=\\\"chatroom name\\\" [(ngModel)]=\\\"chatroomName\\\" />\\r\\n                        </div>\\r\\n                        <div class=\\\"modal-footer\\\">\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\" data-dismiss=\\\"modal\\\">\\r\\n                Close\\r\\n              </button>\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"createChatroom()\\\">\\r\\n                Save changes\\r\\n              </button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- Central Modal Small -->\\r\\n\\r\\n            <!-- Grid column -->\\r\\n\\r\\n            <div style=\\\"width: 100%;\\\" *ngIf=\\\" innerWidth > 1270 || page == 'chat'\\\" [ngClass]=\\\"{'col-md-6 col-xl-8 pl-md-3 mt-4 px-lg-auto px-0': innerWidth > 1270}\\\">\\r\\n                <!-- dropdown list -->\\r\\n                <div class=\\\"row justify-content-between\\\">\\r\\n\\r\\n                    <i (click)=\\\"page = 'headers'\\\" *ngIf=\\\"innerWidth < 1270\\\" style=\\\"font-size: 2em;color: #fff;cursor: pointer;\\\" class=\\\"mb-4 fas fa-arrow-left col\\\"></i>\\r\\n\\r\\n                    <div style=\\\"color: #fff;cursor: pointer;text-align: right;\\\" *ngIf=\\\"render === 'chatrooms' && messages\\\" class=\\\"mb-4 dropdown ml-auto col mr-4\\\">\\r\\n                        <!--Trigger-->\\r\\n\\r\\n                        <a type=\\\"button\\\" id=\\\"dropdownMenu2\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\"><img id=\\\"dropdownMenu2\\\" width=\\\"25px\\\" src=\\\"../../../assets/open-menu.png\\\" /></a>\\r\\n\\r\\n                        <!--Menu-->\\r\\n                        <div *ngIf=\\\"currentRoom && currentUser \\\" class=\\\"dropdown-menu dropdown-primary\\\">\\r\\n                            <a class=\\\"dropdown-item\\\" data-toggle=\\\"modal\\\" data-target=\\\"#modelFriends\\\" (click)=\\\"members()\\\">\\r\\n                Members\\r\\n              </a>\\r\\n                            <a *ngIf=\\\"currentUser._id === currentRoom.admin\\\" (click)=\\\"fetchFriends()\\\" class=\\\"dropdown-item\\\" data-toggle=\\\"modal\\\" data-target=\\\"#modelFriends\\\">Add member</a\\r\\n              >\\r\\n              <a class=\\\"dropdown-item\\\" (click)=\\\"leaveChatroom()\\\"\\r\\n                >{{\\r\\n                  currentUser._id === currentRoom.admin ? \\\"Delete\\\" : \\\"Leave\\\"\\r\\n                }}\\r\\n                chatroom</a\\r\\n              >\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n        <!--  -->\\r\\n\\r\\n        <div *ngIf=\\\"messages\\\" class=\\\"chat-message\\\">\\r\\n          <ul id=\\\"scrollable\\\"\\r\\n            [scrollTop]=\\\"100000000\\\"\\r\\n\\r\\n            class=\\\"list-unstyled chat\\\"\\r\\n            style=\\\" overflow-y: scroll; margin-top: 0px;\\\"\\r\\n            [ngStyle]=\\\"{'height': height}\\\"\\r\\n          >\\r\\n            <!--================================= the Sent message ============================================  -->\\r\\n            <div style=\\\"width: 95%;\\\" *ngFor=\\\"let message of messages\\\">\\r\\n              <li\\r\\n                *ngIf=\\\"message.sender.username !== currentUserUsername\\\"\\r\\n                class=\\\"d-flex justify-content-left mb-4\\\"\\r\\n                style=\\\"min-height: 5em ; width: 100%;\\\"\\r\\n\\r\\n              >\\r\\n                <img\\r\\n                  [src]=\\\"\\r\\n                    http.initialsGenerator(\\r\\n                      message.sender.firstname + ' ' + message.sender.lastname,\\r\\n                      200\\r\\n                    )\\r\\n                  \\\"\\r\\n                  alt=\\\"avatar\\\"\\r\\n                  class=\\\"avatar rounded-circle conv mr-2 ml-lg-3 ml-0 z-depth-1\\\"\\r\\n                />\\r\\n                <div\\r\\n                  class=\\\"chat-body white p-3 ml-2 z-depth-1\\\"\\r\\n                  style=\\\"display: flex ; flex-direction: column; justify-content: center; width: 85%; float: left;\\\"\\r\\n                >\\r\\n                  <div class=\\\"header\\\">\\r\\n                    <strong class=\\\"primary-font\\\">{{\\r\\n                      message.sender.firstname + \\\" \\\" + message.sender.lastname\\r\\n                    }}</strong>\\r\\n\\r\\n                    <small class=\\\"pull-right text-muted mx-4\\\" style=\\\"float:right\\\">\\r\\n                      <i class=\\\"far fa-clock\\\"></i>{{getTime(message._id)}}</small\\r\\n\\r\\n                    >\\r\\n                  </div>\\r\\n                  <hr class=\\\"w-100\\\" style=\\\"margin:2px\\\" />\\r\\n                  <p class=\\\"mb-0\\\" style=\\\"margin-top:0px;\\\">\\r\\n                    {{ message.content }}\\r\\n                  </p>\\r\\n                </div>\\r\\n              </li>\\r\\n              <!-- ============================ The recieved message ============================= -->\\r\\n              <li\\r\\n                *ngIf=\\\"message.sender.username === currentUserUsername\\\"\\r\\n\\r\\n                class=\\\"d-flex justify-content-right mb-4\\\"\\r\\n                style=\\\"min-height: 5em;\\\"\\r\\n\\r\\n              >\\r\\n                <div\\r\\n                  class=\\\"chat-body white p-3 ml-2 z-depth-1\\\"\\r\\n                  style=\\\"display: flex ; flex-direction: column; justify-content: center; width: 85%;\\\"\\r\\n                >\\r\\n                  <div class=\\\"header\\\">\\r\\n                    <strong class=\\\"primary-font\\\">{{\\r\\n                      message.sender.firstname + \\\" \\\" + message.sender.lastname\\r\\n                    }}</strong>\\r\\n                    <small class=\\\"pull-right text-muted\\\" style=\\\"float:right\\\">\\r\\n                      <i class=\\\"far fa-clock\\\"></i>{{getTime(message._id)}}</small\\r\\n                    >\\r\\n                  </div>\\r\\n                  <hr class=\\\"w-100\\\" style=\\\"margin:2px\\\" />\\r\\n                  <p class=\\\"mb-0\\\" style=\\\"margin-top:0px;\\\">\\r\\n                    {{ message.content }}\\r\\n                  </p>\\r\\n                </div>\\r\\n                <img\\r\\n                  [src]=\\\"\\r\\n                    http.initialsGenerator(\\r\\n                      message.sender.firstname + ' ' + message.sender.lastname,\\r\\n                      200\\r\\n                    )\\r\\n                  \\\"\\r\\n                  alt=\\\"avatar\\\"\\r\\n                  class=\\\"avatar rounded-circle mr-0 ml-3 z-depth-1\\\"\\r\\n                />\\r\\n              </li>\\r\\n            </div>\\r\\n            <!-- ============================ The textarea ============================= -->\\r\\n          </ul>\\r\\n           <div >\\r\\n           <!-- <div class=\\\"form-group basic-textarea\\\">\\r\\n              <textarea\\r\\n                [(ngModel)]=\\\"content\\\"\\r\\n                class=\\\"form-control pl-2 my-0\\\"\\r\\n                id=\\\"exampleFormControlTextarea2\\\"\\r\\n                rows=\\\"3\\\"\\r\\n                placeholder=\\\"Type your message here...\\\"\\r\\n              ></textarea>\\r\\n            </div>\\r\\n            <button\\r\\n              (click)=\\\"sendMessage()\\\"\\r\\n              type=\\\"button\\\"\\r\\n              outline=\\\"true\\\"\\r\\n              rounded=\\\"true\\\"\\r\\n              style=\\\"border-radius: 20px  ; \\\"\\r\\n              class=\\\"btn btn-info btn-rounded btn-sm waves-effect waves-light  float-right\\\"\\r\\n            >\\r\\n              Send\\r\\n            </button>-->\\r\\n            <div class=\\\"md-form input-group mb-3\\\">\\r\\n              <input [(ngModel)]=\\\"content\\\" style=\\\"background: white;\\\" type=\\\"text\\\" class=\\\"form-control py-2\\\" placeholder=\\\"Type your message here...\\\" aria-label=\\\"Recipient's username\\\"\\r\\n                aria-describedby=\\\"MaterialButton-addon2\\\">\\r\\n              <div class=\\\"input-group-append\\\">\\r\\n                <button (click)=\\\"sendMessage()\\\" class=\\\"btn btn-md btn-info m-0 px-3 mr-4\\\" type=\\\"button\\\" id=\\\"MaterialButton-addon2\\\">Send</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div> \\r\\n        </div>\\r\\n      </div>\\r\\n      </div>\\r\\n      <!-- Grid column -->\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- Grid row -->\\r\\n\\r\\n<!-- </div> -->\\r\\n\\r\\n\\r\\n<!-- addMember -->\\r\\n\\r\\n<div\\r\\n  class=\\\"modal fade\\\"\\r\\n  id=\\\"modelFriends\\\"\\r\\n  tabindex=\\\"-1\\\"\\r\\n  role=\\\"dialog\\\"\\r\\n  aria-labelledby=\\\"myModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\"\\r\\n>\\r\\n  <div\\r\\n    class=\\\"modal-dialog modal-notify modal-info w-responsive\\\"\\r\\n    role=\\\"document\\\"\\r\\n  >\\r\\n    <!--Content-->\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <!--Header-->\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <p class=\\\"heading lead\\\">{{ toggle ? \\\"Members\\\" : \\\"Friends\\\" }} List</p>\\r\\n      </div>\\r\\n\\r\\n      <!--Body-->\\r\\n      <div *ngIf=\\\"friends\\\" class=\\\"modal-body\\\">\\r\\n        <div class=\\\"text-center\\\">\\r\\n          <div>\\r\\n            <li\\r\\n              \\r\\n              *ngFor=\\\"let friend of friends\\\"\\r\\n              class=\\\"d-flex justify-content-between mb-4\\\"\\r\\n              style=\\\"height: 6em;\\\"\\r\\n            >\\r\\n              <img\\r\\n                alt=\\\"avatar\\\"\\r\\n                class=\\\"avatar rounded-circle conv mr-2 ml-lg-3 ml-0 z-depth-1\\\"\\r\\n                [src]=\\\"http.initialsGenerator(friend.username)\\\"\\r\\n                width=\\\"50px\\\"\\r\\n              />\\r\\n              <div\\r\\n                class=\\\"chat-body white p-3 ml-2 z-depth-1\\\"\\r\\n                style=\\\"display: flex ; flex-direction: column; justify-content: center; width: 100%; float: left;\\\"\\r\\n              >\\r\\n                <div class=\\\"header\\\">\\r\\n                  <strong\\r\\n                    [routerLink]=\\\"toggle? '/users/' + friend.username: null\\\"\\r\\n                    (click)=\\\"toggle?null : addMember(friend)\\\"\\r\\n                    style=\\\"cursor: pointer;\\\"\\r\\n                    class=\\\"primary-font\\\"\\r\\n                    data-dismiss=\\\"modal\\\"\\r\\n                  >\\r\\n                    {{ friend.username }}\\r\\n                  </strong>\\r\\n                </div>\\r\\n\\r\\n                <hr class=\\\"w-100\\\" style=\\\"margin:2px\\\" />\\r\\n                <p class=\\\"mb-0\\\" style=\\\"margin-top:0px;\\\">\\r\\n                  {{ friend.firstname + \\\" \\\" + friend.lastname }}\\r\\n                </p>\\r\\n              </div>\\r\\n            </li>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!--Footer-->\\r\\n      <div class=\\\"modal-footer justify-content-center\\\">\\r\\n        <a\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"btn btn-outline-primary waves-effect\\\"\\r\\n          data-dismiss=\\\"modal\\\"\\r\\n          outline=\\\"true\\\"\\r\\n          >Go Back</a\\r\\n        >\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--  -->\"","export default \"<div class=\\\"text-center\\\">\\r\\n  <h1 style=\\\"color: white\\\">OMEGLE</h1>\\r\\n  <p class=\\\"lead\\\" style=\\\"color: white;\\\">\\r\\n    JOIN OUR CHATROOMS\\r\\n  </p>\\r\\n  <div>\\r\\n    <button\\r\\n      id=\\\"btn\\\"\\r\\n      (click)=\\\"(submit)\\\"\\r\\n      mdbBtn\\r\\n      color=\\\"white\\\"\\r\\n      outline=\\\"true\\\"\\r\\n      rounded=\\\"true\\\"\\r\\n      block=\\\"true\\\"\\r\\n      class=\\\"my-4 waves-effect z-depth-0\\\"\\r\\n      mdbWavesEffect\\r\\n      type=\\\"submit\\\"\\r\\n      routerLink=\\\"register\\\"\\r\\n      style=\\\"border-radius: 20px;\\\"\\r\\n    >\\r\\n      Sign up\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<!-- Material form register -->\\r\\n<div class=\\\"card mx-auto\\\" style=\\\"width: 350px; height: 400px; margin-top: 70px;\\\">\\r\\n    <h5 class=\\\"card-header info-color white-text text-center py-4 blue-gradient\\\">\\r\\n        <strong>Login</strong>\\r\\n    </h5>\\r\\n\\r\\n    <!--Card content-->\\r\\n    <div class=\\\"card-body px-lg-5 pt-0\\\">\\r\\n        <!-- Form -->\\r\\n        <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"onLogin(form)\\\" class=\\\"text-center\\\" style=\\\"color: #757575;\\\" action=\\\"#!\\\">\\r\\n            <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                    <!-- First name -->\\r\\n                    <div class=\\\"md-form\\\">\\r\\n                        <input type=\\\"text\\\" id=\\\"materialRegisterFormFirstName\\\" class=\\\"form-control\\\" ngModel name=\\\"username\\\" />\\r\\n                        <label for=\\\"materialRegisterFormFirstName\\\">Username</label>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <!-- E-mail -->\\r\\n\\r\\n            <!-- Password -->\\r\\n            <div class=\\\"md-form\\\">\\r\\n                <input type=\\\"password\\\" id=\\\"materialRegisterFormPassword\\\" class=\\\"form-control\\\" aria-describedby=\\\"materialRegisterFormPasswordHelpBlock\\\" ngModel name=\\\"password\\\" />\\r\\n                <label for=\\\"materialRegisterFormPassword\\\">Password</label>\\r\\n                <small id=\\\"materialRegisterFormPasswordHelpBlock\\\" class=\\\"form-text text-muted mb-4\\\">\\r\\n          At least 8 characters and 1 digit\\r\\n        </small>\\r\\n            </div>\\r\\n\\r\\n            <!-- Sign up button -->\\r\\n            <button (click)=\\\"(submit)\\\" mdbBtn color=\\\"info\\\" outline=\\\"true\\\" rounded=\\\"true\\\" block=\\\"true\\\" class=\\\"my-4 waves-effect z-depth-0\\\" mdbWavesEffect type=\\\"submit\\\" style=\\\"border-radius: 20px;\\\">\\r\\n        Sign in\\r\\n      </button>\\r\\n\\r\\n            <hr />\\r\\n        </form>\\r\\n\\r\\n        <!-- Form -->\\r\\n    </div>\\r\\n</div>\\r\\n<!-- Material form register -->\"","export default \"<!--Navbar-->\\r\\n<nav class=\\\"navbar navbar-expand-lg navbar-dark blue-gradient \\\">\\r\\n    <!-- Navbar brand -->\\r\\n    <a class=\\\"navbar-brand\\\" routerLink=\\\"\\\" routerLinkActive=\\\"router-link-active\\\"> Omegle</a>\\r\\n    <!-- Collapse button -->\\r\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#basicExampleNav\\\" aria-controls=\\\"basicExampleNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n\\r\\n    <!-- Collapsible content -->\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"basicExampleNav\\\">\\r\\n        <!-- Links -->\\r\\n        <ul class=\\\"navbar-nav\\\">\\r\\n          <li *ngIf=\\\"isAuthenticated\\\" class=\\\"nav-item active\\\" [routerLinkActive]=\\\"['active']\\\">\\r\\n  \\r\\n              <a class=\\\"nav-link\\\" routerLink=\\\"profile\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{ exact: true }\\\">\\r\\n                Profile\\r\\n              </a>\\r\\n          </li>\\r\\n          <li *ngIf=\\\"isAuthenticated\\\" class=\\\"nav-item active\\\" [routerLinkActive]=\\\"['active']\\\">\\r\\n  \\r\\n            <a class=\\\"nav-link\\\" routerLink=\\\"info\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{ exact: true }\\\">\\r\\n              Info\\r\\n            </a>\\r\\n        </li>\\r\\n        </ul>\\r\\n        <ul class=\\\"ml-auto navbar-nav\\\">\\r\\n\\r\\n          <div *ngIf=\\\"isAuthenticated\\\" class=\\\"form-inline\\\">\\r\\n            <div class=\\\"md-form my-0\\\">\\r\\n              <input style=\\\"color: white;\\\" [(ngModel)]=\\\"inputVal\\\" class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\">\\r\\n            </div>\\r\\n            <button (click)=\\\"assignVal()\\\" class=\\\"btn btn-outline-white btn-md my-0 ml-sm-2\\\" type=\\\"submit\\\">Search</button>\\r\\n          </div>\\r\\n      \\r\\n        </ul>\\r\\n        <ul class=\\\"navbar-nav ml-auto\\\">\\r\\n\\r\\n            <li *ngIf=\\\"!isAuthenticated\\\" class=\\\"nav-item active\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{ exact: true }\\\">\\r\\n                <a class=\\\"nav-link\\\" routerLink=\\\"login\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{ exact: true }\\\">\\r\\n                login\\r\\n              </a>\\r\\n            </li>\\r\\n\\r\\n            <li *ngIf=\\\"isAuthenticated\\\" class=\\\"nav-item active\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{ exact: true }\\\">\\r\\n                <a class=\\\"nav-link\\\" (click)=\\\"logOut()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{ exact: true }\\\">\\r\\n              logout\\r\\n            </a>\\r\\n            </li>\\r\\n            <!-- <span style = \\\"float: right;\\\" class=\\\"nav-item\\\"   routerLink=\\\"/logout\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{ exact: true }\\\">\\r\\n              logout\\r\\n            </span> -->\\r\\n        </ul>\\r\\n\\r\\n        <!-- <li class=\\\"nav-item\\\">\\r\\n\\r\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Pricing</a>\\r\\n      </li> -->\\r\\n        <!-- Dropdown -->\\r\\n        <!-- <li class=\\\"nav-item dropdown\\\">\\r\\n        <a\\r\\n          class=\\\"nav-link dropdown-toggle\\\"\\r\\n          id=\\\"navbarDropdownMenuLink\\\"\\r\\n          data-toggle=\\\"dropdown\\\"\\r\\n          aria-haspopup=\\\"true\\\"\\r\\n          aria-expanded=\\\"false\\\"\\r\\n          >Dropdown</a\\r\\n        >\\r\\n        <div\\r\\n          class=\\\"dropdown-menu dropdown-primary\\\"\\r\\n          aria-labelledby=\\\"navbarDropdownMenuLink\\\"\\r\\n        >\\r\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Action</a>\\r\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Another action</a>\\r\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Something else here</a>\\r\\n        </div>\\r\\n      </li> -->\\r\\n\\r\\n        <!-- Links -->\\r\\n    </div>\\r\\n\\r\\n    <!-- Collapsible content -->\\r\\n</nav>\\r\\n<!--/.Navbar-->\"","export default \"<div *ngIf=\\\"status && $user | async as user\\\" style=\\\"display: flex; flex-direction:column; height: 600px;\\\" class=\\\"card testimonial-card my-4 text-center\\\">\\r\\n    <!-- Background color -->\\r\\n    <div style=\\\"flex:10;\\\" class=\\\"card-up blue-gradient\\\"></div>\\r\\n\\r\\n    <!-- Avatar -->\\r\\n    <div style=\\\"margin-top: -125px; border-radius: 200px;\\\" class=\\\"mx-auto white\\\">\\r\\n        <img [src]=\\\"http.initialsGenerator(user.firstname + ' ' + user.lastname)\\\" class=\\\"rounded-circle\\\" alt=\\\"woman avatar\\\" />\\r\\n    </div>\\r\\n\\r\\n    <!-- Content -->\\r\\n    <div style=\\\"flex:13\\\" class=\\\"card-body\\\">\\r\\n        <!-- Name -->\\r\\n        <h4 class=\\\"card-title\\\">{{ user.firstname + \\\" \\\" + user.lastname }}</h4>\\r\\n        <hr />\\r\\n        <!-- Quotation -->\\r\\n        <p>\\r\\n            <i class=\\\"fas fa-quote-left\\\"></i> {{user.bio}}\\r\\n\\r\\n        </p>\\r\\n\\r\\n        <div class=\\\"modal fade\\\" id=\\\"modelSendMessage\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n            <div class=\\\"modal-dialog cascading-modal modal-avatar modal-sm\\\" role=\\\"document\\\">\\r\\n                <!--Content-->\\r\\n                <div class=\\\"modal-content\\\">\\r\\n                    <!--Header-->\\r\\n                    <div class=\\\"modal-header\\\">\\r\\n                        <img [src]=\\\"\\r\\n                http.initialsGenerator(user.firstname + ' ' + user.lastname)\\r\\n              \\\" class=\\\"rounded-circle\\\" alt=\\\"avatar\\\" />\\r\\n                    </div>\\r\\n                    <!--Body-->\\r\\n                    <div class=\\\"modal-body text-center mb-1\\\">\\r\\n                        <h5 class=\\\"mt-1 mb-2\\\">\\r\\n                            {{ user.firstname + \\\" \\\" + user.lastname }}\\r\\n                        </h5>\\r\\n\\r\\n                        <div class=\\\"md-form ml-0 mr-0\\\">\\r\\n                            <input #inputField type=\\\"text\\\" type=\\\"text\\\" id=\\\"form29\\\" class=\\\"form-control form-control-sm validate ml-0\\\" />\\r\\n                            <label data-error=\\\"wrong\\\" data-success=\\\"Sent\\\" for=\\\"form29\\\" class=\\\"ml-0\\\">Enter Your Message</label\\r\\n              >\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"text-center mt-4\\\">\\r\\n              <button\\r\\n                (click)=\\\"sendMessage(inputField.value)\\\"\\r\\n                class=\\\"btn btn-blue mt-1\\\"\\r\\n              >\\r\\n                Send<i class=\\\"fas fa-sign-in ml-1\\\"></i>\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!--/.Content-->\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-flex justify-content-center\\\">\\r\\n      <!-- The Button for sending messages dirictly fome the profile-->\\r\\n      <div *ngIf=\\\"status == 'Remove friend'\\\" class=\\\"text-center\\\">\\r\\n        <a\\r\\n          href=\\\"\\\"\\r\\n          class=\\\"my-4 waves-effect z-depth-0 py-3 px-4\\\"\\r\\n          style=\\\"border-radius: 100px; width: auto;\\\"\\r\\n          mdbBtn\\r\\n          color=\\\"blue\\\"\\r\\n          block=\\\"true\\\"\\r\\n          data-toggle=\\\"modal\\\"\\r\\n          data-target=\\\"#modelSendMessage\\\"\\r\\n          ><i class=\\\"fas fa-paper-plane\\\"></i\\r\\n        ></a>\\r\\n      </div>\\r\\n\\r\\n      <!-- Button for sending/removeing/accepting a friend request -->\\r\\n      <button\\r\\n        *ngIf=\\\"!profile\\\"\\r\\n        class=\\\"my-4 waves-effect z-depth-0 mx-2\\\"\\r\\n        style=\\\"border-radius: 20px;width: 200px;\\\"\\r\\n        mdbBtn\\r\\n        color=\\\"blue\\\"\\r\\n        outline=\\\"true\\\"\\r\\n        rounded=\\\"true\\\"\\r\\n        block=\\\"true\\\"\\r\\n        mdbWavesEffect\\r\\n        (click)=\\\"handleFriendRequests()\\\"\\r\\n      >\\r\\n        {{ status }}\\r\\n      </button>\\r\\n\\r\\n      <!-- Button for showing the friends of th ecurrent user -->\\r\\n      <a\\r\\n        (click)=\\\"getAllFreinds()\\\"\\r\\n        class=\\\"my-4 waves-effect z-depth-0 py-3 px-4\\\"\\r\\n        style=\\\"border-radius: 100px; width: auto;\\\"\\r\\n        mdbBtn\\r\\n        color=\\\"blue\\\"\\r\\n        data-toggle=\\\"modal\\\"\\r\\n        data-target=\\\"#modelFriends\\\"\\r\\n        >Friends</a\\r\\n      >\\r\\n\\r\\n      <a\\r\\n        *ngIf=\\\"profile\\\"\\r\\n        (click)=\\\"getAllRequests()\\\"\\r\\n        class=\\\"my-4 waves-effect z-depth-0 py-3 px-4\\\"\\r\\n        style=\\\"border-radius: 100px; width: auto;\\\"\\r\\n        mdbBtn\\r\\n        color=\\\"blue\\\"\\r\\n        data-toggle=\\\"modal\\\"\\r\\n        data-target=\\\"#modelFriends\\\"\\r\\n        >Requests</a\\r\\n      >\\r\\n    </div>\\r\\n\\r\\n    <!-- Central Modal Medium Info -->\\r\\n    <div\\r\\n      class=\\\"modal fade\\\"\\r\\n      id=\\\"modelFriends\\\"\\r\\n      tabindex=\\\"-1\\\"\\r\\n      role=\\\"dialog\\\"\\r\\n      aria-labelledby=\\\"myModalLabel\\\"\\r\\n      aria-hidden=\\\"true\\\"\\r\\n    >\\r\\n      <div\\r\\n        class=\\\"modal-dialog modal-notify modal-info w-responsive\\\"\\r\\n        role=\\\"document\\\"\\r\\n      >\\r\\n        <!--Content-->\\r\\n        <div class=\\\"modal-content\\\">\\r\\n          <!--Header-->\\r\\n          <div class=\\\"modal-header\\\">\\r\\n            <p class=\\\"heading lead\\\">Freinds List</p>\\r\\n          </div>\\r\\n\\r\\n          <!--Body-->\\r\\n          <div class=\\\"modal-body\\\">\\r\\n            <div class=\\\"text-center\\\">\\r\\n              <div>\\r\\n                <li\\r\\n                  *ngFor=\\\"let friend of friends\\\"\\r\\n                  class=\\\"d-flex justify-content-between mb-4\\\"\\r\\n                  style=\\\"height: 6em;\\\"\\r\\n                >\\r\\n                  <img\\r\\n                    alt=\\\"avatar\\\"\\r\\n                    class=\\\"avatar rounded-circle conv mr-2 ml-lg-3 ml-0 z-depth-1\\\"\\r\\n                    [src]=\\\"http.initialsGenerator(friend.firstname + ' ' + friend.lastname,90)\\\"\\r\\n                  />\\r\\n                  <div\\r\\n                    class=\\\"chat-body white p-3 ml-2 z-depth-1\\\"\\r\\n                    style=\\\"display: flex ; flex-direction: column; justify-content: center; width: 100%; float: left;\\\"\\r\\n                  >\\r\\n                    <div class=\\\"header\\\">\\r\\n                      <strong\\r\\n                        [routerLink]=\\\"'/users/' + friend.username\\\"\\r\\n                        class=\\\"primary-font\\\"\\r\\n                        data-dismiss=\\\"modal\\\"\\r\\n                      >\\r\\n                        {{ friend.username }}\\r\\n                      </strong>\\r\\n                    </div>\\r\\n\\r\\n                    <hr class=\\\"w-100\\\" style=\\\"margin:2px\\\" />\\r\\n                    <p class=\\\"mb-0\\\" style=\\\"margin-top:0px;\\\">\\r\\n                      {{ friend.firstname + \\\" \\\" + friend.lastname }}\\r\\n                    </p>\\r\\n                  </div>\\r\\n                  <a\\r\\n                    *ngIf=\\\"isRequest\\\"\\r\\n                    (click)=\\\"acceptFriendRequest(friend._id)\\\"\\r\\n                    class=\\\"my-4 waves-effect z-depth-0 py-3 px-4 mx-4\\\"\\r\\n                    style=\\\"border-radius: 35px; width: 100px;\\\"\\r\\n                    mdbBtn\\r\\n                    color=\\\"green\\\"\\r\\n                    block=\\\"true\\\"\\r\\n                    ><i class=\\\"fas fa-check\\\"></i\\r\\n                  ></a>\\r\\n                </li>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <!--Footer-->\\r\\n          <div class=\\\"modal-footer justify-content-center\\\">\\r\\n            <a\\r\\n              type=\\\"button\\\"\\r\\n              class=\\\"btn btn-outline-primary waves-effect\\\"\\r\\n              data-dismiss=\\\"modal\\\"\\r\\n              outline=\\\"true\\\"\\r\\n              >Go Back</a\\r\\n            >\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","export default \"<div *ngIf=\\\"$users | async as users\\\" style=\\\"height: 600px; width: 700px; \\\" class=\\\" card blue-gradient lighten-3 chat-room mt-3 mx-auto \\\">\\r\\n  <h3 style=\\\"text-align: center;color: white;\\\" class=\\\"mt-4\\\">\\r\\n    <b>{{users.length==0? \\\"Nothing was found\\\" : users.length == 1? \\\"1 result was found\\\": users.length + \\\" results were found\\\"}}</b></h3>\\r\\n  <hr style=\\\"background: white;\\\">\\r\\n    <div class=\\\"card-body\\\" style=\\\"overflow-y: scroll;\\\">\\r\\n      <!-- Grid row -->\\r\\n      <div class=\\\"row px-lg-2 px-2 justify-content-center \\\">\\r\\n        <!-- Grid column -->\\r\\n        <div\\r\\n        *ngFor=\\\"let user of users\\\" \\r\\n        style=\\\"width : 400px\\\"\\r\\n        class=\\\"active white rounded-pill border border-primary lighten-3 p-2 my-2 col-8\\\"\\r\\n      >\\r\\n        <a class=\\\"d-flex justify-content-left\\\">\\r\\n          <img\\r\\n          [src]=\\\"http.initialsGenerator(user.name, 100)\\\"\\r\\n            alt=\\\"avatar\\\"\\r\\n            class=\\\"avatar rounded-circle d-flex align-self-center mr-2 z-depth-1\\\"\\r\\n          />\\r\\n          <div class=\\\"text-small\\\">\\r\\n            <strong [routerLink]=\\\"'/users/' + user.username\\\" routerLinkActive=\\\"router-link-active\\\"  style=\\\"float: left; cursor: pointer;\\\">\\r\\n              {{user.name}}\\r\\n            </strong>\\r\\n            <br />\\r\\n            <p class=\\\"last-message text-muted\\\">{{user.username}}</p>\\r\\n          </div>\\r\\n          <div class=\\\"chat-footer\\\">\\r\\n          </div>\\r\\n        </a>\\r\\n    </div\\r\\n    >\\r\\n        <!-- Grid column -->\\r\\n  \\r\\n        <!-- Grid column -->\\r\\n        <div class=\\\"col-md-6 col-xl-8 pl-md-3 mt-4 px-lg-auto px-0\\\">\\r\\n          <div class=\\\"chat-message\\\">\\r\\n            \\r\\n            <div class=\\\"white\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- Grid column -->\\r\\n      </div>\\r\\n      <!-- Grid row -->\\r\\n    </div>\\r\\n  </div>\\r\\n  \"","export default \"<div *ngIf=\\\"$user | async as user\\\" class=\\\" card blue-gradient lighten-3 chat-room mt-3\\\">\\r\\n    <div   class=\\\"card-body\\\">\\r\\n      <!-- Grid row -->\\r\\n      <div class=\\\"row px-lg-2 px-2 justify-content-center\\\">\\r\\n        <!-- Grid column -->\\r\\n        <div style=\\\"width: 70%;\\\" class=\\\"mx-auto\\\">\\r\\n          <div style=\\\"width: 100%;\\\" class=\\\"white z-depth-1 px-3 pt-3 p-2\\\">\\r\\n            <form #submitForm=\\\"ngForm\\\" class=\\\"text-center\\\" (ngSubmit)=\\\"formSubmitted(submitForm)\\\" style=\\\"color: #9933CC;\\\">\\r\\n                <!-- User Name -->\\r\\n                <div class=\\\"md-form\\\">\\r\\n                    <input  required type=\\\"text\\\" id=\\\"materialRegisterFormPhone\\\" class=\\\"form-control\\\" aria-describedby=\\\"materialRegisterFormPhoneHelpBlock\\\" mdbInput [ngModel]=\\\"user.username\\\" name=\\\"username\\\" />\\r\\n                    <label for=\\\"materialRegisterFormPhone\\\">Username</label>\\r\\n                </div>\\r\\n                <div class=\\\"form-row\\\">\\r\\n                    <div class=\\\"col\\\">\\r\\n                        <!-- First name -->\\r\\n                        <div class=\\\"md-form\\\">\\r\\n                            <input required name=\\\"firstname\\\" type=\\\"text\\\" id=\\\"materialRegisterFormFirstName\\\" class=\\\"form-control \\\" mdbInput [ngModel]=\\\"user.firstname\\\" />\\r\\n                            <label for=\\\"materialRegisterFormFirstName\\\">First name</label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col\\\">\\r\\n                        <!-- Last name -->\\r\\n                        <div class=\\\"md-form\\\">\\r\\n                            <input required type=\\\"email\\\" id=\\\"materialRegisterFormLastName\\\" class=\\\"form-control\\\" mdbInput [ngModel]=\\\"user.lastname\\\" name=\\\"lastname\\\" />\\r\\n                            <label for=\\\"materialRegisterFormLastName\\\">Last name</label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <!-- E-mail -->\\r\\n                <div class=\\\"md-form mt-0\\\">\\r\\n                    <input required type=\\\"email\\\" id=\\\"materialRegisterFormEmail\\\" class=\\\"form-control\\\" mdbInput [ngModel]=\\\"user.email\\\" name=\\\"email\\\" />\\r\\n                    <label for=\\\"materialRegisterFormEmail\\\">E-mail</label>\\r\\n                </div>\\r\\n\\r\\n                <!-- Bio -->\\r\\n\\r\\n                <div class=\\\"md-form mt-0\\\">\\r\\n                    <input required type=\\\"text\\\" id=\\\"materialRegisterFormBio\\\" class=\\\"form-control\\\" mdbInput [ngModel]=\\\"user.bio\\\" name=\\\"bio\\\" />\\r\\n                    <label for=\\\"materialRegisterFormBio\\\">Bio</label>\\r\\n                </div>\\r\\n\\r\\n                <!-- Password -->\\r\\n                <div class=\\\"md-form\\\">\\r\\n                    <input required type=\\\"password\\\" id=\\\"materialRegisterFormNewPassword\\\" class=\\\"form-control\\\" aria-describedby=\\\"materialRegisterFormNewPasswordHelpBlock\\\" mdbInput ngModel name=\\\"newpassword\\\" />\\r\\n                    <label for=\\\"materialRegisterFormNewPassword\\\">New Password</label>\\r\\n                    <small id=\\\"materialRegisterFormNewPasswordHelpBlock\\\" class=\\\"form-text text-muted mb-4\\\">\\r\\n              At least 8 characters\\r\\n            </small>\\r\\n                </div>\\r\\n    \\r\\n                <!-- Sign up button -->\\r\\n                <div class=\\\"form-row\\\">\\r\\n                    <div class=\\\"col mx-3\\\">\\r\\n                         <div class=\\\"md-form\\\">\\r\\n                    <input required type=\\\"password\\\" id=\\\"materialRegisterFormPassword\\\" class=\\\"form-control\\\" aria-describedby=\\\"materialRegisterFormPasswordHelpBlock\\\" mdbInput ngModel name=\\\"password\\\" />\\r\\n                    <label for=\\\"materialRegisterFormPassword\\\">Password</label>\\r\\n                    \\r\\n                   \\r\\n                </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col mx-3\\\">\\r\\n                   <button mdbBtn color=\\\"info\\\" outline=\\\"true\\\" rounded=\\\"true\\\" block=\\\"true\\\" class=\\\"my-4 waves-effect z-depth-0\\\" mdbWavesEffect type=\\\"submit\\\" style=\\\"border-radius: 20px;\\\">\\r\\n                Update\\r\\n              </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n               \\r\\n                <hr />\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- Grid column -->\\r\\n       \\r\\n        <!-- Grid column -->\\r\\n      </div>\\r\\n      <!-- Grid row -->\\r\\n    </div>\\r\\n  </div>\\r\\n  \"","export default \"<mdb-card class=\\\"mx-auto\\\" style=\\\"width: 350px; height: 500px; margin-top: 70px;\\\">\\r\\n    <mdb-card-header class=\\\"color-block blue-gradient white-text text-center py-4\\\">\\r\\n        <h5>\\r\\n            <strong> Sign up </strong>\\r\\n        </h5>\\r\\n    </mdb-card-header>\\r\\n    <!--Card content-->\\r\\n    <mdb-card-body class=\\\"px-lg-5 pt-0\\\">\\r\\n        <!-- Form -->\\r\\n\\r\\n        <form #submitForm=\\\"ngForm\\\" class=\\\"text-center\\\" (ngSubmit)=\\\"formSubmitted(submitForm)\\\" style=\\\"color: #9933CC;\\\">\\r\\n            <!-- User Name -->\\r\\n            <div class=\\\"md-form\\\">\\r\\n                <input required type=\\\"text\\\" id=\\\"materialRegisterFormPhone\\\" class=\\\"form-control\\\" aria-describedby=\\\"materialRegisterFormPhoneHelpBlock\\\" mdbInput ngModel name=\\\"username\\\" />\\r\\n                <label for=\\\"materialRegisterFormPhone\\\">Username</label>\\r\\n            </div>\\r\\n            <div class=\\\"form-row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                    <!-- First name -->\\r\\n                    <div class=\\\"md-form\\\">\\r\\n                        <input required name=\\\"firstname\\\" type=\\\"text\\\" id=\\\"materialRegisterFormFirstName\\\" class=\\\"form-control \\\" mdbInput ngModel/>\\r\\n                        <label for=\\\"materialRegisterFormFirstName\\\">First name</label>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\">\\r\\n                    <!-- Last name -->\\r\\n                    <div class=\\\"md-form\\\">\\r\\n                        <input required type=\\\"email\\\" id=\\\"materialRegisterFormLastName\\\" class=\\\"form-control\\\" mdbInput ngModel name=\\\"lastname\\\" />\\r\\n                        <label for=\\\"materialRegisterFormLastName\\\">Last name</label>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- E-mail -->\\r\\n            <div class=\\\"md-form mt-0\\\">\\r\\n                <input required type=\\\"email\\\" id=\\\"materialRegisterFormEmail\\\" class=\\\"form-control\\\" mdbInput ngModel name=\\\"email\\\" />\\r\\n                <label for=\\\"materialRegisterFormEmail\\\">E-mail</label>\\r\\n            </div>\\r\\n            <!-- Password -->\\r\\n            <div class=\\\"md-form\\\">\\r\\n                <input required type=\\\"password\\\" id=\\\"materialRegisterFormPassword\\\" class=\\\"form-control\\\" aria-describedby=\\\"materialRegisterFormPasswordHelpBlock\\\" mdbInput ngModel name=\\\"password\\\" />\\r\\n                <label for=\\\"materialRegisterFormPassword\\\">Password</label>\\r\\n                <small id=\\\"materialRegisterFormPasswordHelpBlock\\\" class=\\\"form-text text-muted mb-4\\\">\\r\\n          At least 8 characters\\r\\n        </small>\\r\\n            </div>\\r\\n\\r\\n            <!-- Sign up button -->\\r\\n            <button mdbBtn color=\\\"info\\\" outline=\\\"true\\\" rounded=\\\"true\\\" block=\\\"true\\\" class=\\\"my-4 waves-effect z-depth-0\\\" mdbWavesEffect type=\\\"submit\\\" style=\\\"border-radius: 20px;\\\">\\r\\n        Sign up\\r\\n      </button>\\r\\n            <hr />\\r\\n        </form>\\r\\n        <!-- Form -->\\r\\n    </mdb-card-body>\\r\\n</mdb-card>\\r\\n<!-- Material form register -->\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { LandingComponent } from \"./components/landing/landing.component\";\r\nimport { LoginComponent } from \"./components/login/login.component\";\r\nimport { SignupComponent } from \"./signup/signup.component\";\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { ChatpageComponent } from './components/chatpage/chatpage.component';\r\n\r\nimport { AuthGuard } from './guards/auth.guard'\r\nimport { NotAuthGuard } from './guards/notauth.guard'\r\nimport { SearchAreaComponent } from './components/search-area/search-area.component';\r\nimport { SettingsComponent } from './components/settings/settings.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: \"\", component: LandingComponent,canActivate:[NotAuthGuard]},\r\n  { path: \"login\", component: LoginComponent ,canActivate:[NotAuthGuard]},\r\n  { path: \"profile\", component: ProfileComponent, canActivate:[AuthGuard]},\r\n  { path: \"info\", component: SettingsComponent, canActivate:[AuthGuard]},\r\n  { path: \"users/:username\", component: ProfileComponent, canActivate:[AuthGuard]},\r\n  { path: \"register\", component: SignupComponent,canActivate:[NotAuthGuard]},\r\n  { path: \"chatroom\" ,component: ChatpageComponent , canActivate:[AuthGuard]},\r\n  { path: \"search\" ,component: SearchAreaComponent , canActivate:[AuthGuard]}\r\n\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component,OnInit } from \"@angular/core\";\r\nimport { AuthService } from './services/auth.service';\r\n\r\n@Component({\r\n  selector: \"app-root\",\r\n  templateUrl: \"./app.component.html\",\r\n  styleUrls: [\"./app.component.scss\"]\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  constructor(private authService:AuthService){\r\n\r\n  }\r\n  title = \"ng-nodes-web\";\r\n  ngOnInit(): void {\r\n    // console.log(!!this.authService.getToken(),this.authService.getToken())\r\n   setTimeout(()=>this.authService.isAuthenticated.next(!!this.authService.getToken()) ,0) \r\n  }\r\n}\r\n//anything","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { LandingComponent } from './components/landing/landing.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { FlashMessagesModule } from 'angular2-flash-messages';\r\nimport { AuthService } from './services/auth.service';\r\nimport { ValidateService } from './services/validate.service';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { ChatpageComponent } from './components/chatpage/chatpage.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport {NotAuthGuard} from './guards/notauth.guard';\r\nimport { SettingsComponent } from './components/settings/settings.component';\r\nimport { SearchAreaComponent } from './components/search-area/search-area.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LandingComponent,\r\n    NavbarComponent,\r\n    LoginComponent,\r\n    SignupComponent,\r\n    ProfileComponent,\r\n    ChatpageComponent,\r\n    SettingsComponent,\r\n    SearchAreaComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    MDBBootstrapModule.forRoot(),\r\n    FlashMessagesModule.forRoot(),\r\n    HttpClientModule\r\n  ],\r\n  providers: [ValidateService, AuthService, AuthGuard, NotAuthGuard],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n // back\r\n\r\n","export default \".card {\\n  height: 85vh;\\n}\\n\\n.card-body {\\n  background-color: 0;\\n  height: 80%;\\n}\\n\\n.white {\\n  border-radius: 30px;\\n}\\n\\n.white .friend-list {\\n  background-color: 0;\\n}\\n\\n.white .z-depth-1 {\\n  background-color: 0;\\n}\\n\\n.avatar {\\n  width: 2.5em;\\n}\\n\\nli .avatar {\\n  height: 3.5em;\\n  width: 3.5em;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jaGF0cGFnZS9DOlxcVXNlcnNcXEFib2JrZXJcXERlc2t0b3BcXG5nLW5vZGVzLXdlYi9zcmNcXGFwcFxcY29tcG9uZW50c1xcY2hhdHBhZ2VcXGNoYXRwYWdlLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9jb21wb25lbnRzL2NoYXRwYWdlL2NoYXRwYWdlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBQTtBQ0NKOztBREVBO0VBQ0ksbUJBQUE7RUFDQSxXQUFBO0FDQ0o7O0FERUE7RUFDSSxtQkFBQTtBQ0NKOztBREFJO0VBQ0ksbUJBQUE7QUNFUjs7QURFQTtFQUNJLG1CQUFBO0FDQ0o7O0FERUE7RUFDSSxZQUFBO0FDQ0o7O0FER0E7RUFFQSxhQUFBO0VBQ0EsWUFBQTtBQ0RBIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9jaGF0cGFnZS9jaGF0cGFnZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJke1xyXG4gICAgaGVpZ2h0OiA4NXZoO1xyXG59XHJcblxyXG4uY2FyZC1ib2R5e1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmVkKCRjb2xvcjogIzAwMDAwMCk7XHJcbiAgICBoZWlnaHQ6IDgwJTsgIFxyXG59XHJcblxyXG4ud2hpdGUge1xyXG4gICAgYm9yZGVyLXJhZGl1czogMzBweDtcclxuICAgIC5mcmllbmQtbGlzdCB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmVkKCRjb2xvcjogIzAwMDAwMCk7XHJcbiAgICB9XHJcbn1cclxuXHJcbi53aGl0ZSAuei1kZXB0aC0xe1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmVkKCRjb2xvcjogIzAwMDAwMCk7XHJcbn1cclxuXHJcbi5hdmF0YXIge1xyXG4gICAgd2lkdGg6IDIuNWVtOyAgICBcclxufVxyXG5cclxuXHJcbmxpIC5hdmF0YXIge1xyXG5cclxuaGVpZ2h0OiAzLjVlbTsgIFxyXG53aWR0aDogMy41ZW07ICBcclxufVxyXG4iLCIuY2FyZCB7XG4gIGhlaWdodDogODV2aDtcbn1cblxuLmNhcmQtYm9keSB7XG4gIGJhY2tncm91bmQtY29sb3I6IDA7XG4gIGhlaWdodDogODAlO1xufVxuXG4ud2hpdGUge1xuICBib3JkZXItcmFkaXVzOiAzMHB4O1xufVxuLndoaXRlIC5mcmllbmQtbGlzdCB7XG4gIGJhY2tncm91bmQtY29sb3I6IDA7XG59XG5cbi53aGl0ZSAuei1kZXB0aC0xIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogMDtcbn1cblxuLmF2YXRhciB7XG4gIHdpZHRoOiAyLjVlbTtcbn1cblxubGkgLmF2YXRhciB7XG4gIGhlaWdodDogMy41ZW07XG4gIHdpZHRoOiAzLjVlbTtcbn0iXX0= */\"","import { Component, OnInit, HostListener } from \"@angular/core\";\r\nimport { HttpService } from \"src/app/services/http/http.service\";\r\nimport { DataService } from 'src/app/services/data/data.service';\r\nimport * as io from 'socket.io-client';\r\n// import { WebsocketService } from 'src/app/services/Websocket/websocket.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: \"app-chatpage\",\r\n  templateUrl: \"./chatpage.component.html\",\r\n  styleUrls: [\"./chatpage.component.scss\"]\r\n})\r\nexport class ChatpageComponent implements OnInit {\r\n\r\n  constructor(public http: HttpService, public data : DataService) {}\r\n\r\n  currentReceiver: any;\r\n  currentUserUsername: any;\r\n  currentUser: any;\r\n  currentRoom: any;\r\n  render: String = \"friends\";\r\n  messages: any;\r\n  friends: any;\r\n  latest: any;\r\n  latestChatrooms: any;\r\n  chatrooms: any;\r\n  chatroomName: any;\r\n  toggle: boolean;\r\n  page  = \"chat\";\r\n  height = \"60vh\"\r\n  public innerWidth: any;\r\n\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  onResize(event) {\r\n  this.innerWidth = window.innerWidth;\r\n  console.log(this.innerWidth)\r\n}\r\n    socket:any;\r\n\r\n  ngOnInit() {\r\n    this.socket =  io(\"https://ng-nodes.herokuapp.com\")\r\n    this.innerWidth = window.innerWidth;\r\n    this.socket.on(\"message\" , data=>{\r\n      if(!this.messages) this.messages = []\r\n      this.messages.push(data)\r\n    })\r\n    console.log(window.innerWidth)\r\n\r\n    this.currentUserUsername = localStorage.getItem(\"username\");\r\n    this.http.get(`/users/${this.currentUserUsername}`).subscribe(data => {\r\n      this.currentUser = data[\"user\"];\r\n    });\r\n    this.http.get(`/messages/latest`).subscribe((data: any) => {\r\n        this.latest = data\r\n\r\n      if (this.latest.length != 0) {\r\n        this.currentReceiver =\r\n          this.latest[0].sender.username === this.currentUserUsername\r\n            ? this.latest[0].receiver._id\r\n            : this.latest[0].sender._id;\r\n        this.getMessages();\r\n      }\r\n\r\n    });\r\n  }\r\n  content: String;\r\n\r\n  sendMessage() {\r\n\r\n    var scroll = document.getElementById(\"scrollable\")\r\n    console.log(scroll)\r\n\r\n    if (this.render === \"friends\") {\r\n      this.http\r\n        .post(`/users/${this.currentReceiver}/messages`, {\r\n          content: this.content\r\n        })\r\n        .subscribe(data => {\r\n          if(this.messages[0])\r\n          this.socket.emit(\"message\", {message : data, id: this.messages[0]._id})\r\n          // this.messages.push(data);\r\n          scroll.scrollTop = scroll.scrollHeight\r\n\r\n        });\r\n    } else if (this.render === \"chatrooms\") {\r\n      this.http\r\n        .post(`/groups/${this.currentRoom._id}`, {\r\n          content: this.content\r\n        })\r\n        .subscribe(data => {\r\n          this.socket.emit(\"message\", {message : data, id: this.currentRoom._id})\r\n          // this.messages.push(data);\r\n          scroll.scrollTop = scroll.scrollHeight\r\n        });\r\n    }\r\n    this.content = \"\"\r\n\r\n  }\r\n\r\n\r\n  changeCurrent(message) {\r\n    this.currentReceiver = this.receiverId(message);\r\n    this.getMessages();\r\n  }\r\n\r\n  getChatroom() {\r\n    this.socket.emit(\"leaveRoom\", this.currentRoom._id)\r\n    this.messages = undefined\r\n    this.http.get(`/groups/${this.currentRoom._id}`).subscribe(chatroom => {\r\n      this.messages = chatroom;\r\n      if(this.messages[0]) this.socket.emit(\"joinRoom\", this.currentRoom._id)\r\n\r\n    });\r\n  }\r\n\r\n  currentChatroom(chatroom) {\r\n    this.currentRoom = chatroom;\r\n    this.getChatroom();\r\n  }\r\n\r\n  getMessages() {\r\n    if(this.messages && this.messages[0]) this.socket.emit(\"leaveRoom\", this.messages[0]._id)\r\n    this.messages = undefined;\r\n    if(this.currentReceiver){\r\n      this.http\r\n      .get(`/users/${this.currentReceiver}/messages`)\r\n      .subscribe(messages => {\r\n        this.messages = messages;\r\n        if(messages[0]) this.socket.emit(\"joinRoom\", messages[0]._id)\r\n\r\n        this.changeRender(\"friends\");\r\n      });\r\n\r\n    }else{\r\n      this.changeRender(\"friends\");\r\n    }\r\n    this.height = \"65vh\"\r\n  }\r\n  receiverId(message) {\r\n    return message.sender.username === this.currentUserUsername\r\n      ? message.receiver._id\r\n      : message.sender._id;\r\n  }\r\n  getChatrooms() {\r\n    this.http.get(\"/groups\").subscribe(data => {\r\n      this.latestChatrooms = data;\r\n\r\n      this.messages = null\r\n      if(this.latestChatrooms.length != 0){\r\n        this.currentRoom = this.latestChatrooms[0];\r\n        this.getChatroom();\r\n      }\r\n\r\n      this.changeRender(\"chatrooms\");\r\n    });\r\n    this.height = \"60vh\"\r\n  }\r\n  changeRender(str) {\r\n    this.render = str;\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.latest = null;\r\n    this.socket.disconnect()\r\n  }\r\n\r\n  createChatroom() {\r\n    this.http\r\n    .post(\"/groups\", { name: this.chatroomName })\r\n    .subscribe(chatroom => {\r\n      this.latestChatrooms.push(chatroom);\r\n    });\r\n\r\n  }\r\n  addMember(user) {\r\n    if (!this.toggle) {\r\n      this.http\r\n      .post(`/groups/${this.currentRoom._id}/add`, { user: user._id })\r\n      .subscribe(data => {\r\n        if (data[\"success\"]) this.currentRoom.users.push(user);\r\n        });\r\n      }\r\n    }\r\n    fetchFriends() {\r\n      this.toggle = false;\r\n      this.http.get(`/groups/${this.currentRoom._id}/friendlist`)\r\n      .subscribe(friends => {\r\n        console.log(friends);\r\n        this.friends = friends;\r\n      });\r\n    }\r\n    leaveChatroom() {\r\n      this.http.get(`/groups/${this.currentRoom._id}/leave`).subscribe(data => {\r\n        console.log(data);\r\n      });\r\n    }\r\n    members() {\r\n      this.toggle = true;\r\n      this.friends = this.currentRoom.users;\r\n    }\r\n    getTime(id){\r\n      return this.data.calcTime(this.data.mongoIdToDate(id), null)\r\n    }\r\n\r\n  }\r\n\r\n","export default \".text-center {\\n  margin: 150px;\\n}\\n.text-center h1 {\\n  font-weight: bold;\\n}\\n.text-center p {\\n  font-family: \\\"Roboto\\\", sans-serif;\\n}\\n.text-center #btn:hover {\\n  background-color: white;\\n  color: black;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9sYW5kaW5nL0M6XFxVc2Vyc1xcQWJvYmtlclxcRGVza3RvcFxcbmctbm9kZXMtd2ViL3NyY1xcYXBwXFxjb21wb25lbnRzXFxsYW5kaW5nXFxsYW5kaW5nLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9jb21wb25lbnRzL2xhbmRpbmcvbGFuZGluZy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQUE7QUNDRjtBREFFO0VBQ0UsaUJBQUE7QUNFSjtBREFFO0VBQ0UsaUNBQUE7QUNFSjtBRENJO0VBQ0UsdUJBQUE7RUFDQSxZQUFBO0FDQ04iLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2xhbmRpbmcvbGFuZGluZy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi50ZXh0LWNlbnRlciB7XHJcbiAgbWFyZ2luOiAxNTBweDtcclxuICBoMSB7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICB9XHJcbiAgcCB7XHJcbiAgICBmb250LWZhbWlseTogXCJSb2JvdG9cIiwgc2Fucy1zZXJpZjtcclxuICB9XHJcbiAgI2J0biB7XHJcbiAgICAmOmhvdmVyIHtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgICAgIGNvbG9yOiBibGFjaztcclxuICAgIH1cclxuICB9XHJcbn1cclxuIiwiLnRleHQtY2VudGVyIHtcbiAgbWFyZ2luOiAxNTBweDtcbn1cbi50ZXh0LWNlbnRlciBoMSB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuLnRleHQtY2VudGVyIHAge1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIiwgc2Fucy1zZXJpZjtcbn1cbi50ZXh0LWNlbnRlciAjYnRuOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIGNvbG9yOiBibGFjaztcbn0iXX0= */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { HttpService } from \"src/app/services/http/http.service\";\r\n\r\n@Component({\r\n  selector: \"app-landing\",\r\n  templateUrl: \"./landing.component.html\",\r\n  styleUrls: [\"./landing.component.scss\"]\r\n})\r\nexport class LandingComponent implements OnInit {\r\n  constructor(private http: HttpService) {}\r\n\r\n\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { AuthService } from \"../../services/auth.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { FlashMessagesService } from \"angular2-flash-messages\";\r\n\r\n@Component({\r\n  selector: \"app-login\",\r\n  templateUrl: \"./login.component.html\",\r\n  styleUrls: [\"./login.component.scss\"]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  onLogin(form: NgForm) {\r\n    const user = form.value;\r\n    this.authService.authenticateUser(user).subscribe(data => {\r\n      if (data[\"success\"]) {\r\n        this.authService.storeUserData(data[\"token\"], data[\"user\"]);\r\n        this.authService.isAuthenticated.next(true);\r\n        this.flashMessage.show(\"you're logged in\", {\r\n          cssClass: \"alert-success\",\r\n          timeout: 5000\r\n        });\r\n        this.router.navigate([\"/\"]);\r\n      } else {\r\n        this.flashMessage.show(data[\"msg\"], {\r\n          cssClass: \"alert-danger\",\r\n          timeout: 5000\r\n        });\r\n        this.router.navigate([\"login\"]);\r\n      }\r\n    });\r\n  }\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private flashMessage: FlashMessagesService\r\n  ) {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","export default \"::-webkit-input-placeholder {\\n  /* Edge */\\n  color: white;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9uYXZiYXIvQzpcXFVzZXJzXFxBYm9ia2VyXFxEZXNrdG9wXFxuZy1ub2Rlcy13ZWIvc3JjXFxhcHBcXGNvbXBvbmVudHNcXG5hdmJhclxcbmF2YmFyLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9jb21wb25lbnRzL25hdmJhci9uYXZiYXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFBOEIsU0FBQTtFQUMxQixZQUFBO0FDRUoiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL25hdmJhci9uYXZiYXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIgeyAvKiBFZGdlICovXHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgfSIsIjo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIC8qIEVkZ2UgKi9cbiAgY29sb3I6IHdoaXRlO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.scss']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor(private authService:AuthService, private router : Router) {}\r\n  \r\n  logOut(){\r\n    this.authService.logout()\r\n  }\r\n  inputVal = \"\"\r\n  assignVal(){\r\n    if(/search/.test(location.href)){\r\n      this.authService.searchValSubject.next(this.inputVal)\r\n    }else {\r\n      this.authService.searchVal = this.inputVal\r\n      this.router.navigate(['/search'])\r\n    }\r\n    this.inputVal = \"\"\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.authService.isAuthenticated.subscribe(bool=>{\r\n      this.isAuthenticated = bool;\r\n    })\r\n  }\r\n  isAuthenticated: boolean= false;\r\n  \r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { HttpService } from \"src/app/services/http/http.service\";\r\nimport { AuthService } from \"src/app/services/auth.service\";\r\n\r\n@Component({\r\n  selector: \"app-profile\",\r\n  templateUrl: \"./profile.component.html\",\r\n  styleUrls: [\"./profile.component.scss\"]\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  profile: boolean;\r\n  status: String = \"\";\r\n  $user: Observable<any>;\r\n  constructor(\r\n    public http: HttpService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  id: any;\r\n  friends:Array<any>;\r\n  isRequest:boolean;\r\n\r\n  ngOnInit() {\r\n    \r\n    this.activatedRoute.params.subscribe(param => {\r\n      this.profile = !param.username;\r\n      if (this.profile)\r\n        this.$user = this.http\r\n          .get(`/users/${this.authService.getUsername()}`)\r\n          .pipe(map(one => one[\"user\"]));\r\n      else {\r\n        this.$user = this.http\r\n          .get(`/users/${param.username}`)\r\n          .pipe(map(one => one[\"user\"]));\r\n      }\r\n      this.$user.subscribe(user => {\r\n        this.id = user._id;\r\n        if (user.areFriends) this.status = \"Remove friend\";\r\n        else if (user.sentRequest) this.status = \"Remove friend request\";\r\n        else if (user.gotrequest) this.status = \"Accept friend request\";\r\n        else this.status = \"Add friend\";\r\n      });\r\n    });\r\n  }\r\n\r\n  handleFriendRequests() {\r\n    if (this.status === \"Remove friend request\") {\r\n      this.http.get(`/users/${this.id}/removerequest`).subscribe(data => {\r\n        if (data[\"success\"]) this.status = \"Add friend\";\r\n      });\r\n    } else if (this.status === \"Add friend\") {\r\n      this.http.get(`/users/${this.id}/sendrequest`).subscribe(data => {\r\n        if (data[\"success\"]) this.status = \"Remove friend request\";\r\n      });\r\n    } else if (this.status === \"Remove friend\") {\r\n      this.http.get(`/users/${this.id}/removefriend`).subscribe(data => {\r\n        if (data[\"success\"]) this.status = \"Add friend\";\r\n      });\r\n    } else if (this.status === \"Accept friend request\") {\r\n      this.http.get(`/users/${this.id}/acceptrequest`).subscribe(data => {\r\n        if (data[\"success\"]) this.status = \"Remove friend\";\r\n      });\r\n    }\r\n  }\r\n\r\n  sendMessage(value:String){\r\n    this.http\r\n      .post(`/users/${this.id}/messages`, {\r\n        content: value\r\n      }).subscribe(data => {\r\n       }); \r\n  }\r\n\r\n\r\n  getAllFreinds(){\r\n\r\n    this.friends = null;\r\n    this.isRequest = false;\r\n\r\n    this.http\r\n      .get( `/users/${this.id}/friends` ).subscribe((data:Array<Object>) => {\r\n         //logic of adding the message as a template to the chat\r\n         this.friends = data;\r\n       }); \r\n\r\n  }\r\n  \r\n  getAllRequests(){\r\n    this.friends = null;\r\n    this.isRequest = true;\r\n    this.http\r\n      .get(`/requests`).subscribe((data:Array<Object>) => {\r\n         //logic of adding the message as a template to the cha\r\n        //  console.log(data)\r\n        this.friends = data.map(one => one[\"sender\"]);\r\n       }); \r\n  }\r\n\r\n  acceptFriendRequest(id:String){\r\n    this.http.get(`/users/${id}/acceptrequest`).subscribe((data:Array<Object>) => {\r\n      if (data[\"success\"]){\r\n       this.friends = this.friends.filter( item => item[\"_id\"] !== id);\r\n      } \r\n   });\r\n  }\r\n}\r\n\r\n// this.friends.filter( item => item[\"_id\"].toString() !== id.toString );\r\n\r\n ","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2VhcmNoLWFyZWEvc2VhcmNoLWFyZWEuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { HttpService } from 'src/app/services/http/http.service';\r\n\r\nimport { Subject, Subscription, Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-search-area',\r\n  templateUrl: './search-area.component.html',\r\n  styleUrls: ['./search-area.component.scss']\r\n})\r\nexport class SearchAreaComponent implements OnInit {\r\n\r\n  constructor(private authService : AuthService, public http : HttpService) { }\r\n  searchValSubject:Subscription;\r\n  $users:Observable<any>;\r\n  getUsers(keyword){\r\n    if(keyword)\r\n    this.$users = this.http.get(\"/users/search\" , `?keyword=${keyword}`)\r\n  } \r\n  ngOnInit() {\r\n    this.searchValSubject =  this.authService.searchValSubject.subscribe(one =>{\r\n      this.getUsers(one)\r\n    })\r\n    this.getUsers(this.authService.searchVal)\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.searchValSubject.unsubscribe()\r\n    \r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2V0dGluZ3Mvc2V0dGluZ3MuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpService } from 'src/app/services/http/http.service';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ValidateService } from 'src/app/services/validate.service';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.scss']\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n  $user:Observable<any>;\r\n\r\n  formSubmitted(form: NgForm) {\r\n    const user = form.value;\r\n    const email = form.value.email;\r\n\r\n    // required fields\r\n    if (!this.validateService.validateRegister(user)) {\r\n      this.flashMessage.show(\"please fill in all fields\", {\r\n        cssClass: \"alert-danger\",\r\n        timeout: 3000\r\n      });\r\n      return false;\r\n    }\r\n    // Validate email\r\n    if (!this.validateService.validateEmail(email)) {\r\n      this.flashMessage.show(\"please use a valid email\", {\r\n        cssClass: \"alert-danger\",\r\n        timeout: 3000\r\n      });\r\n      return false;\r\n    }\r\n    // Register user\r\n    this.authService.updateUserInfo(user).subscribe(data=> {\r\n      if(data[\"success\"]){\r\n        this.flashMessage.show(\"Info Updated Successfully\", {\r\n          cssClass: \"alert-success\",\r\n          timeout: 3000\r\n        });\r\n        this.router.navigate([\"profile\"]);\r\n      }else{\r\n        this.flashMessage.show(data[\"msg\"], {\r\n          cssClass: \"alert-danger\",\r\n          timeout: 3000\r\n        }); \r\n      }\r\n    });\r\n  }\r\n\r\n  constructor(private http : HttpService, private authService : AuthService,    private validateService: ValidateService,\r\n    private flashMessage: FlashMessagesService,private router : Router) { }\r\n\r\n  ngOnInit() {\r\n    this.$user = this.http\r\n          .get(`/users/${this.authService.getUsername()}`)\r\n          .pipe(map(one => one[\"user\"]));\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core'\r\nimport {Router,CanActivate} from '@angular/router'\r\nimport {AuthService} from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(private authService:AuthService,private router:Router){\r\n\r\n    }\r\n\r\ncanActivate(){\r\n    \r\n    if(this.authService.isLoggedIn()){\r\n        return true;\r\n    }else{\r\n        this.router.navigate(['']);\r\n    }\r\n}\r\n\r\n\r\n}\r\n","import {Injectable} from '@angular/core'\r\nimport {Router,CanActivate} from '@angular/router'\r\nimport {AuthService} from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class NotAuthGuard implements CanActivate {\r\n  constructor(private authService:AuthService,private router:Router){\r\n\r\n  }\r\n  canActivate(){\r\n    if(this.authService.isLoggedIn()){\r\n      this.router.navigate(['chatroom']);\r\n    }else{\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Subject } from \"rxjs\";\r\nimport { Router } from \"@angular/router\";\r\nimport { HttpService } from './http/http.service';\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class AuthService {\r\n  authToken: any;\r\n  user: any;\r\n  searchVal = \"\";\r\n  searchValSubject: Subject<String> = new Subject()\r\n  isAuthenticated: Subject<boolean> = new Subject();\r\n\r\n  constructor(private http: HttpService, private router: Router) {}\r\n  registerUser(user) {\r\n    return this.http.post(\"/users\", user);\r\n  }\r\n  updateUserInfo(user) {\r\n    return this.http.patch(\"/users\", user);\r\n\r\n\r\n  }\r\n\r\n  authenticateUser(user) {\r\n    return this.http.post(\r\n      \"/users/authenticate\",\r\n      user\r\n    );\r\n  }\r\n\r\n  storeUserData(token, user) {\r\n    localStorage.setItem(\"id_token\", token);\r\n    localStorage.setItem(\"username\", user[\"username\"]);\r\n    this.authToken = token;\r\n    this.user = user;\r\n  }\r\n  isLoggedIn() {\r\n    return !!localStorage.getItem(\"id_token\");\r\n  }\r\n  logout() {\r\n    localStorage.clear();\r\n    this.router.navigate([\"\"]);\r\n    this.isAuthenticated.next(false);\r\n  }\r\n  getToken() {\r\n    return localStorage.getItem(\"id_token\");\r\n  }\r\n  getUsername() {\r\n    return localStorage.getItem(\"username\");\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n\r\n   times = {\r\n    \"min\": 60,\r\n    \"hour\": Math.pow(60,2),\r\n    \"day\": (Math.pow(60,2) * 24),\r\n    \"week\": (Math.pow(60,2) * 24 * 7),\r\n    \"month\": (Math.pow(60,2) * 24 * 7 * 4),\r\n    \"year\": (Math.pow(60,2) * 24 * 7 * 4 * 12)\r\n  };\r\n  calcTime(date, max) {\r\n    if (!date) return \"\";\r\n    var d = new Date(date),\r\n      diff = ((Date.now() - d.getTime()) / 1000);\r\n    if (diff < this.times.min) {\r\n      return \"now\";\r\n    } else if (diff < this.times.hour) {\r\n      return Math.floor(diff / this.times.min) + \" min ago\";\r\n    } else if (diff < this.times.day) {\r\n      return Math.floor(diff / this.times.hour) + \" hours ago\";\r\n    } else if (diff < this.times.week) {\r\n      return Math.floor(diff / this.times.day) + \" days ago\";\r\n    } else if (diff < this.times.month) {\r\n      return Math.floor(diff / this.times.week) + \" weeks ago\";\r\n    } else if (diff < this.times.year) {\r\n      return Math.floor(diff / this.times.month) + \" months ago\";\r\n    } //else over a year\r\n    return \"over a year ago\";\r\n }\r\n\r\n mongoIdToDate(id){\r\n   var timestamp = id.substring(0,8)\r\n   return new Date( parseInt( timestamp, 16 ) * 1000 )\r\n }\r\n\r\n  constructor() { }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class HttpService {\r\n  token = localStorage.getItem(\"id_token\");\r\n  headers = { Authorization: this.token };\r\n\r\n  prod = \"http://waar-nodes.herokuapp.com/api\";\r\n  dev = \"http://127.0.0.1:7000/api\";\r\n\r\n  constructor(private http: HttpClient) {}\r\n  initialsGenerator(name, size = 250) {\r\n    return `https://ui-avatars.com/api/?size=${size}&name=${name}&background=0fabcd&color=fff`;\r\n  }\r\n  get(route, query = \"\") {\r\n    \r\n    // console.log(this.token);\r\n    return this.http.get(this.dev + route + query, {\r\n\r\n      \r\n      headers: this.token ? this.headers : null\r\n    });\r\n  }\r\n  post(route, json) {\r\n\r\n    return this.http.post(this.dev + route, json, {\r\n      headers: this.token ? this.headers : null\r\n    });\r\n  }\r\n  patch(route, json) {\r\n    return this.http.patch(this.dev + route, json, {\r\n\r\n      headers: this.token ? this.headers : null\r\n    });\r\n  }\r\n  delete(route) {\r\n    return this.http.delete(this.dev + route, {\r\n      headers: this.token ? this.headers : null\r\n    });\r\n\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class ValidateService {\r\n  constructor() {}\r\n  validateRegister(user) {\r\n    console.log(user);\r\n    return (\r\n      user.username ||\r\n      user.email ||\r\n      user.pasword ||\r\n      user.firsName ||\r\n      user.lastName\r\n    );\r\n  }\r\n  validateEmail(email) {\r\n    const emailChackingRe = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return emailChackingRe.test(email);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpZ251cC9zaWdudXAuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { ValidateService } from \"./../services/validate.service\";\r\nimport { FlashMessagesService } from \"angular2-flash-messages\";\r\nimport { AuthService } from \"./../services/auth.service\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: \"app-signup\",\r\n  templateUrl: \"./signup.component.html\",\r\n  styleUrls: [\"./signup.component.scss\"]\r\n})\r\nexport class SignupComponent implements OnInit {\r\n\r\n  constructor(\r\n    private validateService: ValidateService,\r\n    private flashMessage: FlashMessagesService,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  formSubmitted(form: NgForm) {\r\n    const user = form.value;\r\n    const email = form.value.email;\r\n    // required fields\r\n    if (!this.validateService.validateRegister(user)) {\r\n      this.flashMessage.show(\"please fill in all fields\", {\r\n        cssClass: \"alert-danger\",\r\n        timeout: 3000\r\n      });\r\n      return false;\r\n    }\r\n    // Validate email\r\n    if (!this.validateService.validateEmail(email)) {\r\n      this.flashMessage.show(\"please use a valid email\", {\r\n        cssClass: \"alert-danger\",\r\n        timeout: 3000\r\n      });\r\n      return false;\r\n    }\r\n    // Register user\r\n    this.authService.registerUser(user).subscribe(data=> {\r\n      if(data[\"success\"]){\r\n        this.flashMessage.show(\"Signed Up Successfully\", {\r\n          cssClass: \"alert-success\",\r\n          timeout: 3000\r\n        });\r\n        this.router.navigate([\"login\"]);\r\n      }else{\r\n        this.flashMessage.show(data[\"msg\"], {\r\n          cssClass: \"alert-danger\",\r\n          timeout: 3000\r\n        }); \r\n        this.router.navigate([\"register\"]);\r\n      }\r\n      //this needs to be fixed, it need to check the status of the body if it's true or false, and respond to the user respectively\r\n\r\n\r\n      // if (data[\"_body\"].json()){\r\n      // this.flashMessage.show(\"you are now registered and can log in\", {\r\n      //   cssClass: \"alert-success\",\r\n      //   timeout: 3000\r\n      // });\r\n      //   this.router.navigate([\"/login\"]);\r\n      // } else {\r\n      // }\r\n    });\r\n  }\r\n  \r\n\r\n  ngOnInit() {}\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","/* (ignored) */"],"sourceRoot":"webpack:///","file":"main-es5.js"}